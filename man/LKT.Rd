% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LKTfunctions.R
\name{LKT}
\alias{LKT}
\title{LKT}
\usage{
LKT(
  data,
  components,
  features,
  offsetvals = NA,
  fixedpars = NA,
  seedpars = NA,
  covariates = NA,
  dualfit = FALSE,
  interc = FALSE,
  elastic = FALSE,
  verbose = TRUE,
  epsilon = 1e-04,
  cost = 512,
  type = 0,
  maketimes = FALSE,
  bias = 0
)
}
\arguments{
\item{data}{A dataset with Anon.Student.Id and CF..ansbin.}

\item{components}{A vector of factors that can be used to compute each features for each subject.}

\item{features}{a vector methods to use to compute a feature for the component.}

\item{offsetvals}{a vector of set coefficients, or NA values, to fix coefficients set and leave NA to be solved.}

\item{fixedpars}{a vector of parameters for all features+components.}

\item{seedpars}{a vector of parameters for all features+components to seed non-linear parameter search.}

\item{covariates}{A list of components that interacts with component by feature in the main specification.}

\item{dualfit}{TRUE or FALSE, fit a simple latency using logit.}

\item{interc}{TRUE or FALSE, include a global intercept.}

\item{elastic}{glmnet, cv.glmnet, cva.glmnet or FALSE.}

\item{verbose}{provides more output in some cases.}

\item{epsilon}{passed to LiblineaR}

\item{cost}{passsed to LiblineaR}

\item{type}{passsed to LiblineaR}

\item{maketimes}{Boolean indicating whether to create time based features (or may be precomputed)}

\item{bias}{passsed to LiblineaR}
}
\value{
list of values "model", "prediction", "nullmodel", "latencymodel", "optimizedpars","subjectrmse", and "newdata"
}
\description{
Compute a logistic regression model of learning for input data.
}
\examples{
colnames(data)[1] <- "Anon.Student.Id"
colnames(data)[3] <- "CF..ansbin."
colnames(data)[6] <- "Duration..sec." # only necessary for time based features
data <- computeSpacingPredictors(data, "Skill") # only necessary for time based features
modelob <- LKT(
  data = data,
  components = c("Anon.Student.Id", "Skill", "Skill"),
  features = c("logitdec", "logitdec$", "lineafm$"),
  fixedpars = c(.9, .85)
)
print(summary(modelob$model))
}
